function test_zmq_getsockopt
    [ctx, socket] = setup;
    cleanupObj = onCleanup(@() teardown(ctx, socket));

    % Table with the default values for options
    defaultOptions = { ...
        {'ZMQ_TYPE'                , 'ZMQ_REP' } , ...
        {'ZMQ_RCVMORE'             , 0         } , ...
        {'ZMQ_SNDHWM'              , 1000      } , ...
        {'ZMQ_RCVHWM'              , 1000      } , ...
        {'ZMQ_AFFINITY'            , 0         } , ...
    ... %  {'ZMQ_IDENTITY'            , ''        } , ... % issues on octave
        {'ZMQ_RATE'                , 100       } , ...
        {'ZMQ_RECOVERY_IVL'        , 10000     } , ...
        {'ZMQ_RCVBUF'              , 0         } , ...
        {'ZMQ_LINGER'              , -1        } , ...
        {'ZMQ_RECONNECT_IVL'       , 100       } , ...
        {'ZMQ_RECONNECT_IVL_MAX'   , 0         } , ...
        {'ZMQ_BACKLOG'             , 100       } , ...
        {'ZMQ_MAXMSGSIZE'          , -1        } , ...
        {'ZMQ_MULTICAST_HOPS'      , 1         } , ...
        {'ZMQ_RCVTIMEO'            , -1        } , ...
        {'ZMQ_SNDTIMEO'            , -1        } , ...
        {'ZMQ_IPV6'                , 0         } , ...
        {'ZMQ_IPV4ONLY'            , 1         } , ...
        {'ZMQ_IMMEDIATE'           , 0         },  ...
        {'ZMQ_TCP_KEEPALIVE'       , -1        } , ...
        {'ZMQ_TCP_KEEPALIVE_IDLE'  , -1        } , ...
        {'ZMQ_TCP_KEEPALIVE_CNT'   , -1        } , ...
        {'ZMQ_TCP_KEEPALIVE_INTVL' , -1        } , ...
        {'ZMQ_MECHANISM'           , 'ZMQ_NULL'} , ...
        {'ZMQ_PLAIN_USERNAME'      , ''        } , ...
        {'ZMQ_PLAIN_PASSWORD'      , ''        } , ...
    };

    % This loop will test all the socket options against the default values listed
    % above.
    %
    % Once the socket is fresh and unused, all the options should remain with the
    % default values.
    for n = 1:(length(defaultOptions)-1)
        option = defaultOptions{n}{1};
        value = defaultOptions{n}{2};

        response = assert_does_not_throw(@zmq.core.getsockopt, socket, option);

        if ~ischar(value)
            condition = response == value;
            % display
            response = num2str(response);
            value = num2str(value);
        else
            condition = strcmp(value, response);
            % display
            response = ['"' response '"'];
            value = ['"' value '"'];
        end

        assert(condition, '%s should be %s, %s given.', option, value, response);
    end
end

function [ctx, socket] = setup
    % let's just create and destroy a dummy socket
    ctx = zmq.core.ctx_new();
    socket = zmq.core.socket(ctx, 'ZMQ_REP');
end

function teardown(ctx, socket)
    % close session
    zmq.core.close(socket);
    zmq.core.ctx_shutdown(ctx);
    zmq.core.ctx_term(ctx);
end
